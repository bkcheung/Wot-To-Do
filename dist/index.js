(self.webpackChunkwot_to_do=self.webpackChunkwot_to_do||[]).push([[656],{264:function(t){t.exports=function(){"use strict";var t=6e4,e=36e5,n="millisecond",r="second",s="minute",i="hour",o="day",a="week",c="month",d="quarter",l="year",u="date",m="Invalid Date",f=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,g=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,p={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var e=["th","st","nd","rd"],n=t%100;return"["+t+(e[(n-20)%10]||e[n]||e[0])+"]"}},h=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},L={s:h,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),s=n%60;return(e<=0?"+":"-")+h(r,2,"0")+":"+h(s,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),s=e.clone().add(r,c),i=n-s<0,o=e.clone().add(r+(i?-1:1),c);return+(-(r+(n-s)/(i?s-o:o-s))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:l,w:a,d:o,D:u,h:i,m:s,s:r,ms:n,Q:d}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},y="en",I={};I[y]=p;var v="$isDayjsObject",D=function(t){return t instanceof E||!(!t||!t[v])},S=function t(e,n,r){var s;if(!e)return y;if("string"==typeof e){var i=e.toLowerCase();I[i]&&(s=i),n&&(I[i]=n,s=i);var o=e.split("-");if(!s&&o.length>1)return t(o[0])}else{var a=e.name;I[a]=e,s=a}return!r&&s&&(y=s),s||!r&&y},k=function(t,e){if(D(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new E(n)},j=L;j.l=S,j.i=D,j.w=function(t,e){return k(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var E=function(){function p(t){this.$L=S(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[v]=!0}var h=p.prototype;return h.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(j.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(f);if(r){var s=r[2]-1||0,i=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],s,r[3]||1,r[4]||0,r[5]||0,r[6]||0,i)):new Date(r[1],s,r[3]||1,r[4]||0,r[5]||0,r[6]||0,i)}}return new Date(e)}(t),this.init()},h.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},h.$utils=function(){return j},h.isValid=function(){return!(this.$d.toString()===m)},h.isSame=function(t,e){var n=k(t);return this.startOf(e)<=n&&n<=this.endOf(e)},h.isAfter=function(t,e){return k(t)<this.startOf(e)},h.isBefore=function(t,e){return this.endOf(e)<k(t)},h.$g=function(t,e,n){return j.u(t)?this[e]:this.set(n,t)},h.unix=function(){return Math.floor(this.valueOf()/1e3)},h.valueOf=function(){return this.$d.getTime()},h.startOf=function(t,e){var n=this,d=!!j.u(e)||e,m=j.p(t),f=function(t,e){var r=j.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return d?r:r.endOf(o)},g=function(t,e){return j.w(n.toDate()[t].apply(n.toDate("s"),(d?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},p=this.$W,h=this.$M,L=this.$D,y="set"+(this.$u?"UTC":"");switch(m){case l:return d?f(1,0):f(31,11);case c:return d?f(1,h):f(0,h+1);case a:var I=this.$locale().weekStart||0,v=(p<I?p+7:p)-I;return f(d?L-v:L+(6-v),h);case o:case u:return g(y+"Hours",0);case i:return g(y+"Minutes",1);case s:return g(y+"Seconds",2);case r:return g(y+"Milliseconds",3);default:return this.clone()}},h.endOf=function(t){return this.startOf(t,!1)},h.$set=function(t,e){var a,d=j.p(t),m="set"+(this.$u?"UTC":""),f=(a={},a[o]=m+"Date",a[u]=m+"Date",a[c]=m+"Month",a[l]=m+"FullYear",a[i]=m+"Hours",a[s]=m+"Minutes",a[r]=m+"Seconds",a[n]=m+"Milliseconds",a)[d],g=d===o?this.$D+(e-this.$W):e;if(d===c||d===l){var p=this.clone().set(u,1);p.$d[f](g),p.init(),this.$d=p.set(u,Math.min(this.$D,p.daysInMonth())).$d}else f&&this.$d[f](g);return this.init(),this},h.set=function(t,e){return this.clone().$set(t,e)},h.get=function(t){return this[j.p(t)]()},h.add=function(n,d){var u,m=this;n=Number(n);var f=j.p(d),g=function(t){var e=k(m);return j.w(e.date(e.date()+Math.round(t*n)),m)};if(f===c)return this.set(c,this.$M+n);if(f===l)return this.set(l,this.$y+n);if(f===o)return g(1);if(f===a)return g(7);var p=(u={},u[s]=t,u[i]=e,u[r]=1e3,u)[f]||1,h=this.$d.getTime()+n*p;return j.w(h,this)},h.subtract=function(t,e){return this.add(-1*t,e)},h.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||m;var r=t||"YYYY-MM-DDTHH:mm:ssZ",s=j.z(this),i=this.$H,o=this.$m,a=this.$M,c=n.weekdays,d=n.months,l=n.meridiem,u=function(t,n,s,i){return t&&(t[n]||t(e,r))||s[n].slice(0,i)},f=function(t){return j.s(i%12||12,t,"0")},p=l||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r};return r.replace(g,(function(t,r){return r||function(t){switch(t){case"YY":return String(e.$y).slice(-2);case"YYYY":return j.s(e.$y,4,"0");case"M":return a+1;case"MM":return j.s(a+1,2,"0");case"MMM":return u(n.monthsShort,a,d,3);case"MMMM":return u(d,a);case"D":return e.$D;case"DD":return j.s(e.$D,2,"0");case"d":return String(e.$W);case"dd":return u(n.weekdaysMin,e.$W,c,2);case"ddd":return u(n.weekdaysShort,e.$W,c,3);case"dddd":return c[e.$W];case"H":return String(i);case"HH":return j.s(i,2,"0");case"h":return f(1);case"hh":return f(2);case"a":return p(i,o,!0);case"A":return p(i,o,!1);case"m":return String(o);case"mm":return j.s(o,2,"0");case"s":return String(e.$s);case"ss":return j.s(e.$s,2,"0");case"SSS":return j.s(e.$ms,3,"0");case"Z":return s}return null}(t)||s.replace(":","")}))},h.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},h.diff=function(n,u,m){var f,g=this,p=j.p(u),h=k(n),L=(h.utcOffset()-this.utcOffset())*t,y=this-h,I=function(){return j.m(g,h)};switch(p){case l:f=I()/12;break;case c:f=I();break;case d:f=I()/3;break;case a:f=(y-L)/6048e5;break;case o:f=(y-L)/864e5;break;case i:f=y/e;break;case s:f=y/t;break;case r:f=y/1e3;break;default:f=y}return m?f:j.a(f)},h.daysInMonth=function(){return this.endOf(c).$D},h.$locale=function(){return I[this.$L]},h.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},h.clone=function(){return j.w(this.$d,this)},h.toDate=function(){return new Date(this.valueOf())},h.toJSON=function(){return this.isValid()?this.toISOString():null},h.toISOString=function(){return this.$d.toISOString()},h.toString=function(){return this.$d.toUTCString()},p}(),b=E.prototype;return k.prototype=b,[["$ms",n],["$s",r],["$m",s],["$H",i],["$W",o],["$M",c],["$y",l],["$D",u]].forEach((function(t){b[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),k.extend=function(t,e){return t.$i||(t(e,E,k),t.$i=!0),k},k.locale=S,k.isDayjs=D,k.unix=function(t){return k(1e3*t)},k.en=I[y],k.Ls=I,k.p={},k}()},112:function(t){t.exports=function(){"use strict";return function(t,e,n){e.prototype.isToday=function(){var t="YYYY-MM-DD",e=n();return this.format(t)===e.format(t)}}}()},632:(t,e,n)=>{"use strict";const r=n(264),s=n(112);function i(){const t=JSON.parse(localStorage.getItem("projList")),e=document.getElementById("taskList"),n=document.getElementById("dispProj");u(),n.innerHTML="All Tasks",n.setAttribute("projID","0");for(let n=0;n<t.length;n++){const r=t[n].taskList;for(let t=0;t<r.length;t++)e.appendChild(d(r[t]))}}function o(){const t=JSON.parse(localStorage.getItem("projList")),e=document.getElementById("taskList"),n=document.getElementById("dispProj");u(),n.innerHTML="Today",n.setAttribute("projID","1");for(let n=0;n<t.length;n++){const s=t[n].taskList;for(let t=0;t<s.length;t++)r(s[t].dueDate).isToday()&&e.appendChild(d(s[t]))}}r.extend(s);const a=n(264);function c(t,e,n,r,s){return{title:t,dueDate:a(e).format("MM/DD/YYYY"),priority:n,taskID:r,projID:s,complete:!1}}function d(t){const e=document.createElement("li");e.classList.add("task"),e.setAttribute("taskID",t.taskID),e.setAttribute("projID",t.projID);const n=document.createElement("div");n.classList.add("taskMain");const r=document.createElement("button");t.complete?(r.classList.add("checked"),e.classList.add("completed")):r.classList.add("unchecked"),r.addEventListener("click",(e=>{!function(t,e){e.complete=!e.complete;t.target.closest("li").classList.toggle("completed");const n=t.target;n.classList.toggle("checked"),n.classList.toggle("unchecked"),function(t){const e=JSON.parse(localStorage.getItem("projList")),n=t.projID,r=e.findIndex((t=>{if(t.projID===Number(n))return!0})),s=e[r].taskList,i=t.taskID;let o=s.findIndex((t=>{if(t.taskID===Number(i))return!0}));s[o]=t,localStorage.setItem("projList",JSON.stringify(e))}(e)}(e,t)}));const s=document.createElement("div");s.innerHTML=t.title,s.classList.add("taskText");const i=document.createElement("div");i.innerHTML=t.dueDate;const o=document.createElement("button");o.classList.add("modButton"),o.addEventListener("click",(t=>{f(t)}));const c=document.createElement("button");switch(c.classList.add("delButton"),c.addEventListener("click",(t=>{!function(t){let e=t.target.closest("li"),n=e.getAttribute("projID"),r=JSON.parse(localStorage.getItem("projList")),s=r.findIndex((t=>{if(t.projID===Number(n))return!0})),i=Number(e.getAttribute("taskID")),o=r[s].taskList;for(let t=o.length-1;t>-1;t--)Number(o[t].taskID)===i&&(r[s].taskList.splice(t,1),localStorage.setItem("projList",JSON.stringify(r)));g()}(t)})),t.priority){case"High":e.setAttribute("style","border-left: 4px solid red");break;case"Med":e.setAttribute("style","border-left: 4px solid orange");break;case"Low":e.setAttribute("style","border-left: 4px solid green")}const d=function(t){const e=Object.assign(document.createElement("form"),{classList:"taskModForm hidden"}),n=Object.assign(document.createElement("div"),{classList:"newTaskBody"}),r=Object.assign(document.createElement("input"),{type:"text",classList:"newTaskTitle",value:`${t.title}`}),s=Object.assign(document.createElement("input"),{type:"date",classList:"dueDateSet",value:`${a(t.dueDate).format("YYYY-MM-DD")}`});n.appendChild(r),n.appendChild(s),e.appendChild(n);const i=Object.assign(document.createElement("div"),{classList:"newTaskButtons"}),o=Object.assign(document.createElement("div"),{classList:"dropDown"}),c=Object.assign(document.createElement("div"),{classList:"prioritySel",innerHTML:`${t.priority}`}),d=Object.assign(document.createElement("div"),{classList:"dropContent"}),l=Object.assign(document.createElement("button"),{classList:"lowButton",innerHTML:"Low"});l.addEventListener("click",(t=>{c.innerHTML="Low",t.preventDefault()}));const u=Object.assign(document.createElement("button"),{classList:"medButton",innerHTML:"Med"});u.addEventListener("click",(t=>{c.innerHTML="Med",t.preventDefault()}));const m=Object.assign(document.createElement("button"),{classList:"hiButton",innerHTML:"High"});m.addEventListener("click",(t=>{c.innerHTML="High",t.preventDefault()}));const p=Object.assign(document.createElement("button"),{type:"submit",innerHTML:"Modify",classList:"submit"});return p.addEventListener("click",(t=>{!function(t){t.preventDefault();const e=t.target.closest("form[class=taskModForm]"),n=e.querySelector(".newTaskTitle").value;let r=e.querySelector(".dueDateSet").value;const s=e.querySelector(".prioritySel").innerHTML,i=JSON.parse(localStorage.getItem("projList")),o=t.target.closest("li").getAttribute("taskID"),c=t.target.closest("li").getAttribute("projID");let d=i.findIndex((t=>{if(t.projID===Number(c))return!0})),l=i[d].taskList,u=l.findIndex((t=>{if(t.taskID===Number(o))return!0}));const m=l[u];m.title=n,m.dueDate=a(r).format("MM/DD/YYYY"),m.priority=s,localStorage.setItem("projList",JSON.stringify(i)),f(t),g()}(t)})),d.appendChild(l),d.appendChild(u),d.appendChild(m),o.appendChild(c),o.appendChild(d),i.appendChild(o),i.appendChild(p),e.appendChild(i),e}(t);return n.appendChild(r),n.appendChild(s),n.appendChild(i),n.appendChild(o),n.appendChild(c),e.appendChild(n),e.appendChild(d),e}function l(t){let e=JSON.parse(localStorage.getItem("projList")),n=e.findIndex((e=>{if(e.projID===Number(t))return!0}));const r=e[n],s=document.getElementById("taskList"),i=document.getElementById("dispProj");i.innerHTML=r.projName,i.setAttribute("projID",r.projID),u();const o=r.taskList;for(let t=0;t<o.length;t++)s.appendChild(d(o[t]))}function u(){let t=document.getElementsByTagName("li");for(let e=t.length-1;e>-1;e--)t[e].remove()}function m(t){let e=Number(localStorage.getItem("taskID"));const n=document.getElementById("newTitle");if(""!==n){t.preventDefault();const r=document.getElementById("dueDate");let s=r.value;""===s&&(s=new Date);const i=document.getElementById("taskPriority"),o=Number(document.getElementById("dispProj").getAttribute("projID")),a=c(n.value,s,i.getAttribute("data-value"),e,o);e++,localStorage.setItem("taskID",e),function(t){const e=t.projID;let n=JSON.parse(localStorage.getItem("projList")),r=n.findIndex((t=>{if(t.projID===Number(e))return!0})),s=n[r].taskList;s.push(t),console.log(s),localStorage.setItem("projList",JSON.stringify(n)),l(e)}(a),n.value="",r.value=null,i.textContent="Priority",i.setAttribute("data-value","Low")}}function f(t){const e=t.target.closest("li"),n=e.querySelector(".taskMain");e.querySelector(".taskModForm").classList.toggle("hidden"),n.classList.toggle("hidden")}function g(){const t=document.getElementById("dispProj").getAttribute("projID");"0"===t?i():"1"===t?o():l(t)}function p(t,e){return{projName:t,projID:e,taskList:[]}}function h(){const t=document.getElementById("projList");let e=JSON.parse(localStorage.getItem("projList"));!function(){const t=document.getElementsByClassName("project");for(let e=t.length-1;e>-1;e--)t[e].remove()}();for(let n=0;n<e.length;n++){const r=L(e[n],"project");t.appendChild(r)}localStorage.setItem("projList",JSON.stringify(e))}function L(t,e){const n=document.createElement("div");n.classList.add("project");const r=document.createElement("button");r.innerHTML=t.projName,r.classList.add("projTitle");const s=t.projID;if(r.addEventListener("click",(()=>{l(s),document.getElementById("addTaskSection").classList.remove("hidden")})),n.appendChild(r),"project"===e){const e=function(t){const e=Object.assign(document.createElement("input"),{type:"text",classList:"modForm hidden",value:`${t.projName}`});e.addEventListener("keyup",(t=>{"Escape"===t.key&&v(t),"Enter"===t.key&&I(t)}));const n=Object.assign(document.createElement("button"),{classList:"modFormButton hidden",innerHTML:"↳"});n.addEventListener("click",(t=>{I(t)}));const r=document.createElement("button");r.classList.add("projMod"),r.innerHTML="✎",r.addEventListener("click",(t=>{!function(t){v(t)}(t),t.target.closest("div").querySelector(".modForm").focus()}));return[e,n,r]}(t);n.appendChild(e[0]),n.appendChild(e[1]),n.appendChild(e[2]);const r=document.createElement("button");r.innerHTML="x",r.classList.add("delProj"),r.addEventListener("click",(t=>{!function(t){let e=Number(t.target.getAttribute("projID")),n=JSON.parse(localStorage.getItem("projList"));for(let t=n.length-1;t>-1;t--)n[t].projID===e&&(n.splice(t,1),localStorage.setItem("projList",JSON.stringify(n)));h()}(t)})),r.setAttribute("projID",s),n.appendChild(r)}return n}function y(t){t.preventDefault();const e=document.getElementById("newProj");let n=Number(localStorage.getItem("projID"));!function(t){console.log(t);let e=JSON.parse(localStorage.getItem("projList"));e.push(t),localStorage.setItem("projList",JSON.stringify(e))}(p(e.value,n)),n++,localStorage.setItem("projID",n),e.value=""}function I(t){const e=t.target.closest("div").querySelector(".modForm").value;if(""!==e){console.log(e);const n=t.target.closest("div").querySelector(".delProj").getAttribute("projID"),r=JSON.parse(localStorage.getItem("projList"));let s=r.findIndex((t=>{if(t.projID===Number(n))return!0}));r[s].projName=e,localStorage.setItem("projList",JSON.stringify(r)),h()}v(t)}function v(t){const e=t.target.closest("div"),n=e.querySelector(".projTitle"),r=e.querySelector(".modForm"),s=e.querySelector(".modFormButton"),i=e.querySelector(".projMod"),o=e.querySelector(".delProj");n.classList.toggle("hidden"),r.classList.toggle("hidden"),s.classList.toggle("hidden"),i.classList.toggle("hidden"),o.classList.toggle("hidden")}function D(){const t=p("New Project",2),e=c("Example Task",new Date,"Low",0,2);return t.taskList.push(e),t}function S(){const t=document.getElementById("addTask"),e=document.getElementById("newTaskInput");t.classList.toggle("hidden"),e.classList.toggle("hidden")}function k(){const t=document.getElementById("addProj"),e=document.getElementById("projForm");t.classList.toggle("hidden"),e.classList.toggle("hidden")}function j(){document.getElementById("addTaskSection").classList.add("hidden")}(function(t){let e;try{e=window.localStorage;const t="__storage_test__";return e.setItem(t,t),e.removeItem(t),!0}catch(t){return t instanceof DOMException}})()&&console.log("Local storage is available!"),function(){!function(){const t=[D()];let e=localStorage.getItem("projList"),n=localStorage.getItem("projID"),r=localStorage.getItem("taskID");e=JSON.parse(e||JSON.stringify(t)),n=n||3,r=r||1,localStorage.setItem("projList",JSON.stringify(e)),localStorage.setItem("projID",n),localStorage.setItem("taskID",r)}(),h(),i(),j();const t=document.getElementById("menu"),e=document.getElementById("pageLeft"),n=document.getElementById("allTasks"),r=document.getElementById("today"),s=document.getElementById("taskPriority"),a=document.getElementById("lowButton"),c=document.getElementById("medButton"),d=document.getElementById("hiButton"),l=document.getElementById("addTaskButton"),u=document.getElementById("addProj"),f=document.getElementById("subProj"),g=document.getElementById("addTask"),p=document.getElementById("newTitle"),L=document.getElementById("newProj");t.addEventListener("click",(()=>{e.classList.toggle("hidden")})),window.addEventListener("resize",(()=>{window.innerWidth<600&&e.classList.add("hidden"),window.innerWidth>600&&e.classList.remove("hidden")})),u.addEventListener("click",(()=>{k(),document.getElementById("newProj").focus()})),f.addEventListener("click",(t=>{y(t),k(),h()})),L.addEventListener("keyup",(t=>{"Enter"===t.key&&(y(t),k(),h()),"Escape"===t.key&&k()})),n.addEventListener("click",(()=>{i(),j()})),r.addEventListener("click",(()=>{o(),j()})),g.addEventListener("click",(()=>{S(),document.getElementById("newTitle").focus()})),a.addEventListener("click",(t=>{s.setAttribute("data-value","Low"),s.textContent="Low",t.preventDefault()})),c.addEventListener("click",(t=>{s.setAttribute("data-value","Med"),s.textContent="Med",t.preventDefault()})),d.addEventListener("click",(t=>{s.setAttribute("data-value","High"),s.textContent="High",t.preventDefault()})),l.addEventListener("click",(t=>{m(t),S()})),p.addEventListener("keyup",(t=>{"Enter"===t.key&&(m(t),S()),"Escape"===t.key&&S()}))}()}},t=>{t(t.s=632)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,